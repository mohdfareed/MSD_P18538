@inherits LayoutComponentBase

<MudThemeProvider @ref="@_mudThemeProvider" @bind-IsDarkMode="@_isDarkMode" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="0">
        @* side panel *@
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start"
            OnClick="@((e) => DrawerToggle())" />
        <MudSpacer />

        @* dark mode toggle *@
        @if (_isDarkMode)
        {
            <MudIconButton Icon="@Icons.Material.Filled.Brightness7" Color="Color.Inherit"
                OnClick="@((e) => ToggleDarkMode())" />
        }
        else
        {
            <MudIconButton Icon="@Icons.Material.Filled.Brightness4" Color="Color.Inherit"
                OnClick="@((e) => ToggleDarkMode())" />
        }

        @* github link *@
        <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit"
            Href="https://github.com/BrianMonclus/MSD_P18538" Target="_blank" />
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" Elevation="1">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">Frontend</MudText>
        </MudDrawerHeader>
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large" Class="my-16 pt-16">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    private MudThemeProvider _mudThemeProvider = new MudThemeProvider();
    private bool _drawerOpen = true;
    private bool _isDarkMode;


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _isDarkMode = await _mudThemeProvider.GetSystemPreference();
            StateHasChanged();
        }
    }

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    void ToggleDarkMode()
    {
        _isDarkMode = !_isDarkMode;
    }
}
